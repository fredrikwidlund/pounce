# Makefile.in generated by automake 1.16.3 from Makefile.am.
# lib/libreactor/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/pounce
pkgincludedir = $(includedir)/pounce
pkglibdir = $(libdir)/pounce
pkglibexecdir = $(libexecdir)/pounce
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
check_PROGRAMS = test/notify$(EXEEXT) test/stream$(EXEEXT) \
	test/http$(EXEEXT)
subdir = lib/libreactor
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(dist_noinst_SCRIPTS) \
	$(headerfiles_HEADERS) $(mainheader_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = libreactor.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \
	"$(DESTDIR)$(headerfilesdir)" "$(DESTDIR)$(mainheaderdir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libreactor_test_a_AR = $(AR) $(ARFLAGS)
libreactor_test_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 =  \
	src/picohttpparser/libreactor_test_a-picohttpparser.$(OBJEXT) \
	src/reactor/libreactor_test_a-reactor.$(OBJEXT) \
	src/reactor/libreactor_test_a-timer.$(OBJEXT) \
	src/reactor/libreactor_test_a-stream.$(OBJEXT) \
	src/reactor/libreactor_test_a-notify.$(OBJEXT) \
	src/reactor/libreactor_test_a-http.$(OBJEXT) \
	src/reactor/libreactor_test_a-server.$(OBJEXT) \
	src/reactor/libreactor_test_a-net.$(OBJEXT)
am__objects_2 =
am_libreactor_test_a_OBJECTS = $(am__objects_1) $(am__objects_2)
libreactor_test_a_OBJECTS = $(am_libreactor_test_a_OBJECTS)
libreactor_la_LIBADD =
am__objects_3 = src/picohttpparser/picohttpparser.lo \
	src/reactor/reactor.lo src/reactor/timer.lo \
	src/reactor/stream.lo src/reactor/notify.lo \
	src/reactor/http.lo src/reactor/server.lo src/reactor/net.lo
am_libreactor_la_OBJECTS = $(am__objects_3) $(am__objects_2)
libreactor_la_OBJECTS = $(am_libreactor_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_test_http_OBJECTS = test/http-http.$(OBJEXT) \
	test/http-mock.$(OBJEXT)
test_http_OBJECTS = $(am_test_http_OBJECTS)
am__DEPENDENCIES_1 = libreactor_test.a
test_http_DEPENDENCIES = $(am__DEPENDENCIES_1)
test_http_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_http_CFLAGS) \
	$(CFLAGS) $(test_http_LDFLAGS) $(LDFLAGS) -o $@
am_test_notify_OBJECTS = test/notify-notify.$(OBJEXT) \
	test/notify-mock.$(OBJEXT)
test_notify_OBJECTS = $(am_test_notify_OBJECTS)
test_notify_DEPENDENCIES = $(am__DEPENDENCIES_1)
test_notify_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_notify_CFLAGS) \
	$(CFLAGS) $(test_notify_LDFLAGS) $(LDFLAGS) -o $@
am_test_stream_OBJECTS = test/stream-stream.$(OBJEXT) \
	test/stream-mock.$(OBJEXT)
test_stream_OBJECTS = $(am_test_stream_OBJECTS)
test_stream_DEPENDENCIES = $(am__DEPENDENCIES_1)
test_stream_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(test_stream_CFLAGS) \
	$(CFLAGS) $(test_stream_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(dist_noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/autotools/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Po \
	src/picohttpparser/$(DEPDIR)/picohttpparser.Plo \
	src/reactor/$(DEPDIR)/http.Plo \
	src/reactor/$(DEPDIR)/libreactor_test_a-http.Po \
	src/reactor/$(DEPDIR)/libreactor_test_a-net.Po \
	src/reactor/$(DEPDIR)/libreactor_test_a-notify.Po \
	src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Po \
	src/reactor/$(DEPDIR)/libreactor_test_a-server.Po \
	src/reactor/$(DEPDIR)/libreactor_test_a-stream.Po \
	src/reactor/$(DEPDIR)/libreactor_test_a-timer.Po \
	src/reactor/$(DEPDIR)/net.Plo src/reactor/$(DEPDIR)/notify.Plo \
	src/reactor/$(DEPDIR)/reactor.Plo \
	src/reactor/$(DEPDIR)/server.Plo \
	src/reactor/$(DEPDIR)/stream.Plo \
	src/reactor/$(DEPDIR)/timer.Plo test/$(DEPDIR)/http-http.Po \
	test/$(DEPDIR)/http-mock.Po test/$(DEPDIR)/notify-mock.Po \
	test/$(DEPDIR)/notify-notify.Po test/$(DEPDIR)/stream-mock.Po \
	test/$(DEPDIR)/stream-stream.Po
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libreactor_test_a_SOURCES) $(libreactor_la_SOURCES) \
	$(test_http_SOURCES) $(test_notify_SOURCES) \
	$(test_stream_SOURCES)
DIST_SOURCES = $(libreactor_test_a_SOURCES) $(libreactor_la_SOURCES) \
	$(test_http_SOURCES) $(test_notify_SOURCES) \
	$(test_stream_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(pkgconfig_DATA)
HEADERS = $(headerfiles_HEADERS) $(mainheader_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/autotools/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/autotools/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/libreactor.pc.in \
	$(top_srcdir)/autotools/depcomp \
	$(top_srcdir)/autotools/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} '/root/project/pounce/autotools/missing' aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} '/root/project/pounce/autotools/missing' autoconf
AUTOHEADER = ${SHELL} '/root/project/pounce/autotools/missing' autoheader
AUTOMAKE = ${SHELL} '/root/project/pounce/autotools/missing' automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -Wextra -Wpedantic -g -O3 -flto -march=native
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"pounce\" -DPACKAGE_TARNAME=\"pounce\" -DPACKAGE_VERSION=\"1.0.0\" -DPACKAGE_STRING=\"pounce\ 1.0.0\" -DPACKAGE_BUGREPORT=\"fredrik.widlund@gmail.com\" -DPACKAGE_URL=\"\" -DHAVE_STDIO_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_STRINGS_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_UNISTD_H=1 -DSTDC_HEADERS=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\"
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} '/root/project/pounce/autotools/missing' makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = pounce
PACKAGE_BUGREPORT = fredrik.widlund@gmail.com
PACKAGE_NAME = pounce
PACKAGE_STRING = pounce 1.0.0
PACKAGE_TARNAME = pounce
PACKAGE_URL = 
PACKAGE_VERSION = 1.0.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.0.0
abs_builddir = /root/project/pounce/lib/libreactor
abs_srcdir = /root/project/pounce/lib/libreactor
abs_top_builddir = /root/project/pounce
abs_top_srcdir = /root/project/pounce
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /root/project/pounce/autotools/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AUTOMAKE_OPTIONS = subdir-objects
ACLOCAL_AMFLAGS = ${ACLOCAL_FLAGS} -I m4
AM_CFLAGS = -std=gnu11 -I$(srcdir)/src -fPIC
AM_LDFLAGS = -static
DIST_SUBDIRS = example
EXTRA_DIST = test/data
SOURCE_FILES = \
src/picohttpparser/picohttpparser.c \
src/reactor/reactor.c \
src/reactor/timer.c \
src/reactor/stream.c \
src/reactor/notify.c \
src/reactor/http.c \
src/reactor/server.c \
src/reactor/net.c

HEADER_FILES = \
src/picohttpparser/picohttpparser.h \
src/reactor/reactor.h \
src/reactor/timer.h \
src/reactor/stream.h \
src/reactor/notify.h \
src/reactor/http.h \
src/reactor/server.h \
src/reactor/net.h

lib_LTLIBRARIES = libreactor.la
libreactor_la_SOURCES = $(SOURCE_FILES) $(HEADER_FILES)
headerfilesdir = $(includedir)/reactor
headerfiles_HEADERS = $(HEADER_FILES)
mainheaderdir = $(includedir)
mainheader_HEADERS = src/reactor.h
pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libreactor.pc
MAINTAINERCLEANFILES = aclocal.m4 config.h.in configure Makefile.in libreactor-?.?.?.tar.gz
CLEANFILES = {.,test/,src/reactor/,src/picohttpparser}/*.{gcno,gcda,gcov}

### unit tests ###
check_LIBRARIES = libreactor_test.a
libreactor_test_a_CFLAGS = $(CHECK_CFLAGS)
libreactor_test_a_SOURCES = $(SOURCE_FILES) $(HEADER_FILES)
CHECK_CFLAGS = -std=gnu2x -O0 -g -ftest-coverage -fprofile-arcs -I$(srcdir)/src -DGCOV_BUILD
CHECK_LDADD = -L. libreactor_test.a -lcmocka -ldynamic
CHECK_LDFLAGS_EXTRA = -pthread \
-Wl,--wrap=abort \
-Wl,--wrap=read \
-Wl,--wrap=inotify_init1

test_notify_CFLAGS = $(CHECK_CFLAGS)
test_notify_LDADD = $(CHECK_LDADD)
test_notify_LDFLAGS = $(CHECK_LDFLAGS_EXTRA)
test_notify_SOURCES = test/notify.c test/mock.c
test_stream_CFLAGS = $(CHECK_CFLAGS)
test_stream_LDADD = $(CHECK_LDADD)
test_stream_LDFLAGS = $(CHECK_LDFLAGS_EXTRA)
test_stream_SOURCES = test/stream.c test/mock.c
test_http_CFLAGS = $(CHECK_CFLAGS) -DSRCDIR=\"$(srcdir)/\"
test_http_LDADD = $(CHECK_LDADD)
test_http_LDFLAGS = $(CHECK_LDFLAGS_EXTRA)
test_http_SOURCES = test/http.c test/mock.c
dist_noinst_SCRIPTS = test/valgrind.sh test/coverage.sh Dockerfile
TESTS = $(check_PROGRAMS) test/valgrind.sh test/coverage.sh
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign lib/libreactor/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign lib/libreactor/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
libreactor.pc: $(top_builddir)/config.status $(srcdir)/libreactor.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkLIBRARIES:
	-test -z "$(check_LIBRARIES)" || rm -f $(check_LIBRARIES)

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
src/picohttpparser/$(am__dirstamp):
	@$(MKDIR_P) src/picohttpparser
	@: > src/picohttpparser/$(am__dirstamp)
src/picohttpparser/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/picohttpparser/$(DEPDIR)
	@: > src/picohttpparser/$(DEPDIR)/$(am__dirstamp)
src/picohttpparser/libreactor_test_a-picohttpparser.$(OBJEXT):  \
	src/picohttpparser/$(am__dirstamp) \
	src/picohttpparser/$(DEPDIR)/$(am__dirstamp)
src/reactor/$(am__dirstamp):
	@$(MKDIR_P) src/reactor
	@: > src/reactor/$(am__dirstamp)
src/reactor/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/reactor/$(DEPDIR)
	@: > src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-reactor.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-timer.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-stream.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-notify.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-http.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-server.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/libreactor_test_a-net.$(OBJEXT):  \
	src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)

libreactor_test.a: $(libreactor_test_a_OBJECTS) $(libreactor_test_a_DEPENDENCIES) $(EXTRA_libreactor_test_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libreactor_test.a
	$(AM_V_AR)$(libreactor_test_a_AR) libreactor_test.a $(libreactor_test_a_OBJECTS) $(libreactor_test_a_LIBADD)
	$(AM_V_at)$(RANLIB) libreactor_test.a
src/picohttpparser/picohttpparser.lo:  \
	src/picohttpparser/$(am__dirstamp) \
	src/picohttpparser/$(DEPDIR)/$(am__dirstamp)
src/reactor/reactor.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/timer.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/stream.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/notify.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/http.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/server.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)
src/reactor/net.lo: src/reactor/$(am__dirstamp) \
	src/reactor/$(DEPDIR)/$(am__dirstamp)

libreactor.la: $(libreactor_la_OBJECTS) $(libreactor_la_DEPENDENCIES) $(EXTRA_libreactor_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) -rpath $(libdir) $(libreactor_la_OBJECTS) $(libreactor_la_LIBADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/http-http.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/http-mock.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/http$(EXEEXT): $(test_http_OBJECTS) $(test_http_DEPENDENCIES) $(EXTRA_test_http_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/http$(EXEEXT)
	$(AM_V_CCLD)$(test_http_LINK) $(test_http_OBJECTS) $(test_http_LDADD) $(LIBS)
test/notify-notify.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/notify-mock.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/notify$(EXEEXT): $(test_notify_OBJECTS) $(test_notify_DEPENDENCIES) $(EXTRA_test_notify_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/notify$(EXEEXT)
	$(AM_V_CCLD)$(test_notify_LINK) $(test_notify_OBJECTS) $(test_notify_LDADD) $(LIBS)
test/stream-stream.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/stream-mock.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)

test/stream$(EXEEXT): $(test_stream_OBJECTS) $(test_stream_DEPENDENCIES) $(EXTRA_test_stream_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/stream$(EXEEXT)
	$(AM_V_CCLD)$(test_stream_LINK) $(test_stream_OBJECTS) $(test_stream_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/picohttpparser/*.$(OBJEXT)
	-rm -f src/picohttpparser/*.lo
	-rm -f src/reactor/*.$(OBJEXT)
	-rm -f src/reactor/*.lo
	-rm -f test/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Po # am--include-marker
include src/picohttpparser/$(DEPDIR)/picohttpparser.Plo # am--include-marker
include src/reactor/$(DEPDIR)/http.Plo # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-http.Po # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-net.Po # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-notify.Po # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Po # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-server.Po # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-stream.Po # am--include-marker
include src/reactor/$(DEPDIR)/libreactor_test_a-timer.Po # am--include-marker
include src/reactor/$(DEPDIR)/net.Plo # am--include-marker
include src/reactor/$(DEPDIR)/notify.Plo # am--include-marker
include src/reactor/$(DEPDIR)/reactor.Plo # am--include-marker
include src/reactor/$(DEPDIR)/server.Plo # am--include-marker
include src/reactor/$(DEPDIR)/stream.Plo # am--include-marker
include src/reactor/$(DEPDIR)/timer.Plo # am--include-marker
include test/$(DEPDIR)/http-http.Po # am--include-marker
include test/$(DEPDIR)/http-mock.Po # am--include-marker
include test/$(DEPDIR)/notify-mock.Po # am--include-marker
include test/$(DEPDIR)/notify-notify.Po # am--include-marker
include test/$(DEPDIR)/stream-mock.Po # am--include-marker
include test/$(DEPDIR)/stream-stream.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

src/picohttpparser/libreactor_test_a-picohttpparser.o: src/picohttpparser/picohttpparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/picohttpparser/libreactor_test_a-picohttpparser.o -MD -MP -MF src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Tpo -c -o src/picohttpparser/libreactor_test_a-picohttpparser.o `test -f 'src/picohttpparser/picohttpparser.c' || echo '$(srcdir)/'`src/picohttpparser/picohttpparser.c
	$(AM_V_at)$(am__mv) src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Tpo src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Po
#	$(AM_V_CC)source='src/picohttpparser/picohttpparser.c' object='src/picohttpparser/libreactor_test_a-picohttpparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/picohttpparser/libreactor_test_a-picohttpparser.o `test -f 'src/picohttpparser/picohttpparser.c' || echo '$(srcdir)/'`src/picohttpparser/picohttpparser.c

src/picohttpparser/libreactor_test_a-picohttpparser.obj: src/picohttpparser/picohttpparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/picohttpparser/libreactor_test_a-picohttpparser.obj -MD -MP -MF src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Tpo -c -o src/picohttpparser/libreactor_test_a-picohttpparser.obj `if test -f 'src/picohttpparser/picohttpparser.c'; then $(CYGPATH_W) 'src/picohttpparser/picohttpparser.c'; else $(CYGPATH_W) '$(srcdir)/src/picohttpparser/picohttpparser.c'; fi`
	$(AM_V_at)$(am__mv) src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Tpo src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Po
#	$(AM_V_CC)source='src/picohttpparser/picohttpparser.c' object='src/picohttpparser/libreactor_test_a-picohttpparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/picohttpparser/libreactor_test_a-picohttpparser.obj `if test -f 'src/picohttpparser/picohttpparser.c'; then $(CYGPATH_W) 'src/picohttpparser/picohttpparser.c'; else $(CYGPATH_W) '$(srcdir)/src/picohttpparser/picohttpparser.c'; fi`

src/reactor/libreactor_test_a-reactor.o: src/reactor/reactor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-reactor.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Tpo -c -o src/reactor/libreactor_test_a-reactor.o `test -f 'src/reactor/reactor.c' || echo '$(srcdir)/'`src/reactor/reactor.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Po
#	$(AM_V_CC)source='src/reactor/reactor.c' object='src/reactor/libreactor_test_a-reactor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-reactor.o `test -f 'src/reactor/reactor.c' || echo '$(srcdir)/'`src/reactor/reactor.c

src/reactor/libreactor_test_a-reactor.obj: src/reactor/reactor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-reactor.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Tpo -c -o src/reactor/libreactor_test_a-reactor.obj `if test -f 'src/reactor/reactor.c'; then $(CYGPATH_W) 'src/reactor/reactor.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/reactor.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Po
#	$(AM_V_CC)source='src/reactor/reactor.c' object='src/reactor/libreactor_test_a-reactor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-reactor.obj `if test -f 'src/reactor/reactor.c'; then $(CYGPATH_W) 'src/reactor/reactor.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/reactor.c'; fi`

src/reactor/libreactor_test_a-timer.o: src/reactor/timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-timer.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-timer.Tpo -c -o src/reactor/libreactor_test_a-timer.o `test -f 'src/reactor/timer.c' || echo '$(srcdir)/'`src/reactor/timer.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-timer.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-timer.Po
#	$(AM_V_CC)source='src/reactor/timer.c' object='src/reactor/libreactor_test_a-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-timer.o `test -f 'src/reactor/timer.c' || echo '$(srcdir)/'`src/reactor/timer.c

src/reactor/libreactor_test_a-timer.obj: src/reactor/timer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-timer.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-timer.Tpo -c -o src/reactor/libreactor_test_a-timer.obj `if test -f 'src/reactor/timer.c'; then $(CYGPATH_W) 'src/reactor/timer.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/timer.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-timer.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-timer.Po
#	$(AM_V_CC)source='src/reactor/timer.c' object='src/reactor/libreactor_test_a-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-timer.obj `if test -f 'src/reactor/timer.c'; then $(CYGPATH_W) 'src/reactor/timer.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/timer.c'; fi`

src/reactor/libreactor_test_a-stream.o: src/reactor/stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-stream.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-stream.Tpo -c -o src/reactor/libreactor_test_a-stream.o `test -f 'src/reactor/stream.c' || echo '$(srcdir)/'`src/reactor/stream.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-stream.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-stream.Po
#	$(AM_V_CC)source='src/reactor/stream.c' object='src/reactor/libreactor_test_a-stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-stream.o `test -f 'src/reactor/stream.c' || echo '$(srcdir)/'`src/reactor/stream.c

src/reactor/libreactor_test_a-stream.obj: src/reactor/stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-stream.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-stream.Tpo -c -o src/reactor/libreactor_test_a-stream.obj `if test -f 'src/reactor/stream.c'; then $(CYGPATH_W) 'src/reactor/stream.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/stream.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-stream.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-stream.Po
#	$(AM_V_CC)source='src/reactor/stream.c' object='src/reactor/libreactor_test_a-stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-stream.obj `if test -f 'src/reactor/stream.c'; then $(CYGPATH_W) 'src/reactor/stream.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/stream.c'; fi`

src/reactor/libreactor_test_a-notify.o: src/reactor/notify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-notify.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-notify.Tpo -c -o src/reactor/libreactor_test_a-notify.o `test -f 'src/reactor/notify.c' || echo '$(srcdir)/'`src/reactor/notify.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-notify.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-notify.Po
#	$(AM_V_CC)source='src/reactor/notify.c' object='src/reactor/libreactor_test_a-notify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-notify.o `test -f 'src/reactor/notify.c' || echo '$(srcdir)/'`src/reactor/notify.c

src/reactor/libreactor_test_a-notify.obj: src/reactor/notify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-notify.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-notify.Tpo -c -o src/reactor/libreactor_test_a-notify.obj `if test -f 'src/reactor/notify.c'; then $(CYGPATH_W) 'src/reactor/notify.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/notify.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-notify.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-notify.Po
#	$(AM_V_CC)source='src/reactor/notify.c' object='src/reactor/libreactor_test_a-notify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-notify.obj `if test -f 'src/reactor/notify.c'; then $(CYGPATH_W) 'src/reactor/notify.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/notify.c'; fi`

src/reactor/libreactor_test_a-http.o: src/reactor/http.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-http.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-http.Tpo -c -o src/reactor/libreactor_test_a-http.o `test -f 'src/reactor/http.c' || echo '$(srcdir)/'`src/reactor/http.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-http.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-http.Po
#	$(AM_V_CC)source='src/reactor/http.c' object='src/reactor/libreactor_test_a-http.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-http.o `test -f 'src/reactor/http.c' || echo '$(srcdir)/'`src/reactor/http.c

src/reactor/libreactor_test_a-http.obj: src/reactor/http.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-http.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-http.Tpo -c -o src/reactor/libreactor_test_a-http.obj `if test -f 'src/reactor/http.c'; then $(CYGPATH_W) 'src/reactor/http.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/http.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-http.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-http.Po
#	$(AM_V_CC)source='src/reactor/http.c' object='src/reactor/libreactor_test_a-http.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-http.obj `if test -f 'src/reactor/http.c'; then $(CYGPATH_W) 'src/reactor/http.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/http.c'; fi`

src/reactor/libreactor_test_a-server.o: src/reactor/server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-server.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-server.Tpo -c -o src/reactor/libreactor_test_a-server.o `test -f 'src/reactor/server.c' || echo '$(srcdir)/'`src/reactor/server.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-server.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-server.Po
#	$(AM_V_CC)source='src/reactor/server.c' object='src/reactor/libreactor_test_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-server.o `test -f 'src/reactor/server.c' || echo '$(srcdir)/'`src/reactor/server.c

src/reactor/libreactor_test_a-server.obj: src/reactor/server.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-server.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-server.Tpo -c -o src/reactor/libreactor_test_a-server.obj `if test -f 'src/reactor/server.c'; then $(CYGPATH_W) 'src/reactor/server.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/server.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-server.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-server.Po
#	$(AM_V_CC)source='src/reactor/server.c' object='src/reactor/libreactor_test_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-server.obj `if test -f 'src/reactor/server.c'; then $(CYGPATH_W) 'src/reactor/server.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/server.c'; fi`

src/reactor/libreactor_test_a-net.o: src/reactor/net.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-net.o -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-net.Tpo -c -o src/reactor/libreactor_test_a-net.o `test -f 'src/reactor/net.c' || echo '$(srcdir)/'`src/reactor/net.c
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-net.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-net.Po
#	$(AM_V_CC)source='src/reactor/net.c' object='src/reactor/libreactor_test_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-net.o `test -f 'src/reactor/net.c' || echo '$(srcdir)/'`src/reactor/net.c

src/reactor/libreactor_test_a-net.obj: src/reactor/net.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -MT src/reactor/libreactor_test_a-net.obj -MD -MP -MF src/reactor/$(DEPDIR)/libreactor_test_a-net.Tpo -c -o src/reactor/libreactor_test_a-net.obj `if test -f 'src/reactor/net.c'; then $(CYGPATH_W) 'src/reactor/net.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/net.c'; fi`
	$(AM_V_at)$(am__mv) src/reactor/$(DEPDIR)/libreactor_test_a-net.Tpo src/reactor/$(DEPDIR)/libreactor_test_a-net.Po
#	$(AM_V_CC)source='src/reactor/net.c' object='src/reactor/libreactor_test_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libreactor_test_a_CFLAGS) $(CFLAGS) -c -o src/reactor/libreactor_test_a-net.obj `if test -f 'src/reactor/net.c'; then $(CYGPATH_W) 'src/reactor/net.c'; else $(CYGPATH_W) '$(srcdir)/src/reactor/net.c'; fi`

test/http-http.o: test/http.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -MT test/http-http.o -MD -MP -MF test/$(DEPDIR)/http-http.Tpo -c -o test/http-http.o `test -f 'test/http.c' || echo '$(srcdir)/'`test/http.c
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/http-http.Tpo test/$(DEPDIR)/http-http.Po
#	$(AM_V_CC)source='test/http.c' object='test/http-http.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -c -o test/http-http.o `test -f 'test/http.c' || echo '$(srcdir)/'`test/http.c

test/http-http.obj: test/http.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -MT test/http-http.obj -MD -MP -MF test/$(DEPDIR)/http-http.Tpo -c -o test/http-http.obj `if test -f 'test/http.c'; then $(CYGPATH_W) 'test/http.c'; else $(CYGPATH_W) '$(srcdir)/test/http.c'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/http-http.Tpo test/$(DEPDIR)/http-http.Po
#	$(AM_V_CC)source='test/http.c' object='test/http-http.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -c -o test/http-http.obj `if test -f 'test/http.c'; then $(CYGPATH_W) 'test/http.c'; else $(CYGPATH_W) '$(srcdir)/test/http.c'; fi`

test/http-mock.o: test/mock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -MT test/http-mock.o -MD -MP -MF test/$(DEPDIR)/http-mock.Tpo -c -o test/http-mock.o `test -f 'test/mock.c' || echo '$(srcdir)/'`test/mock.c
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/http-mock.Tpo test/$(DEPDIR)/http-mock.Po
#	$(AM_V_CC)source='test/mock.c' object='test/http-mock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -c -o test/http-mock.o `test -f 'test/mock.c' || echo '$(srcdir)/'`test/mock.c

test/http-mock.obj: test/mock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -MT test/http-mock.obj -MD -MP -MF test/$(DEPDIR)/http-mock.Tpo -c -o test/http-mock.obj `if test -f 'test/mock.c'; then $(CYGPATH_W) 'test/mock.c'; else $(CYGPATH_W) '$(srcdir)/test/mock.c'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/http-mock.Tpo test/$(DEPDIR)/http-mock.Po
#	$(AM_V_CC)source='test/mock.c' object='test/http-mock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_http_CFLAGS) $(CFLAGS) -c -o test/http-mock.obj `if test -f 'test/mock.c'; then $(CYGPATH_W) 'test/mock.c'; else $(CYGPATH_W) '$(srcdir)/test/mock.c'; fi`

test/notify-notify.o: test/notify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -MT test/notify-notify.o -MD -MP -MF test/$(DEPDIR)/notify-notify.Tpo -c -o test/notify-notify.o `test -f 'test/notify.c' || echo '$(srcdir)/'`test/notify.c
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/notify-notify.Tpo test/$(DEPDIR)/notify-notify.Po
#	$(AM_V_CC)source='test/notify.c' object='test/notify-notify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -c -o test/notify-notify.o `test -f 'test/notify.c' || echo '$(srcdir)/'`test/notify.c

test/notify-notify.obj: test/notify.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -MT test/notify-notify.obj -MD -MP -MF test/$(DEPDIR)/notify-notify.Tpo -c -o test/notify-notify.obj `if test -f 'test/notify.c'; then $(CYGPATH_W) 'test/notify.c'; else $(CYGPATH_W) '$(srcdir)/test/notify.c'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/notify-notify.Tpo test/$(DEPDIR)/notify-notify.Po
#	$(AM_V_CC)source='test/notify.c' object='test/notify-notify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -c -o test/notify-notify.obj `if test -f 'test/notify.c'; then $(CYGPATH_W) 'test/notify.c'; else $(CYGPATH_W) '$(srcdir)/test/notify.c'; fi`

test/notify-mock.o: test/mock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -MT test/notify-mock.o -MD -MP -MF test/$(DEPDIR)/notify-mock.Tpo -c -o test/notify-mock.o `test -f 'test/mock.c' || echo '$(srcdir)/'`test/mock.c
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/notify-mock.Tpo test/$(DEPDIR)/notify-mock.Po
#	$(AM_V_CC)source='test/mock.c' object='test/notify-mock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -c -o test/notify-mock.o `test -f 'test/mock.c' || echo '$(srcdir)/'`test/mock.c

test/notify-mock.obj: test/mock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -MT test/notify-mock.obj -MD -MP -MF test/$(DEPDIR)/notify-mock.Tpo -c -o test/notify-mock.obj `if test -f 'test/mock.c'; then $(CYGPATH_W) 'test/mock.c'; else $(CYGPATH_W) '$(srcdir)/test/mock.c'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/notify-mock.Tpo test/$(DEPDIR)/notify-mock.Po
#	$(AM_V_CC)source='test/mock.c' object='test/notify-mock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_notify_CFLAGS) $(CFLAGS) -c -o test/notify-mock.obj `if test -f 'test/mock.c'; then $(CYGPATH_W) 'test/mock.c'; else $(CYGPATH_W) '$(srcdir)/test/mock.c'; fi`

test/stream-stream.o: test/stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT test/stream-stream.o -MD -MP -MF test/$(DEPDIR)/stream-stream.Tpo -c -o test/stream-stream.o `test -f 'test/stream.c' || echo '$(srcdir)/'`test/stream.c
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/stream-stream.Tpo test/$(DEPDIR)/stream-stream.Po
#	$(AM_V_CC)source='test/stream.c' object='test/stream-stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o test/stream-stream.o `test -f 'test/stream.c' || echo '$(srcdir)/'`test/stream.c

test/stream-stream.obj: test/stream.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT test/stream-stream.obj -MD -MP -MF test/$(DEPDIR)/stream-stream.Tpo -c -o test/stream-stream.obj `if test -f 'test/stream.c'; then $(CYGPATH_W) 'test/stream.c'; else $(CYGPATH_W) '$(srcdir)/test/stream.c'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/stream-stream.Tpo test/$(DEPDIR)/stream-stream.Po
#	$(AM_V_CC)source='test/stream.c' object='test/stream-stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o test/stream-stream.obj `if test -f 'test/stream.c'; then $(CYGPATH_W) 'test/stream.c'; else $(CYGPATH_W) '$(srcdir)/test/stream.c'; fi`

test/stream-mock.o: test/mock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT test/stream-mock.o -MD -MP -MF test/$(DEPDIR)/stream-mock.Tpo -c -o test/stream-mock.o `test -f 'test/mock.c' || echo '$(srcdir)/'`test/mock.c
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/stream-mock.Tpo test/$(DEPDIR)/stream-mock.Po
#	$(AM_V_CC)source='test/mock.c' object='test/stream-mock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o test/stream-mock.o `test -f 'test/mock.c' || echo '$(srcdir)/'`test/mock.c

test/stream-mock.obj: test/mock.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT test/stream-mock.obj -MD -MP -MF test/$(DEPDIR)/stream-mock.Tpo -c -o test/stream-mock.obj `if test -f 'test/mock.c'; then $(CYGPATH_W) 'test/mock.c'; else $(CYGPATH_W) '$(srcdir)/test/mock.c'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/stream-mock.Tpo test/$(DEPDIR)/stream-mock.Po
#	$(AM_V_CC)source='test/mock.c' object='test/stream-mock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o test/stream-mock.obj `if test -f 'test/mock.c'; then $(CYGPATH_W) 'test/mock.c'; else $(CYGPATH_W) '$(srcdir)/test/mock.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/picohttpparser/.libs src/picohttpparser/_libs
	-rm -rf src/reactor/.libs src/reactor/_libs
	-rm -rf test/.libs test/_libs
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
install-headerfilesHEADERS: $(headerfiles_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(headerfiles_HEADERS)'; test -n "$(headerfilesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(headerfilesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(headerfilesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(headerfilesdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(headerfilesdir)" || exit $$?; \
	done

uninstall-headerfilesHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(headerfiles_HEADERS)'; test -n "$(headerfilesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(headerfilesdir)'; $(am__uninstall_files_from_dir)
install-mainheaderHEADERS: $(mainheader_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(mainheader_HEADERS)'; test -n "$(mainheaderdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(mainheaderdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(mainheaderdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(mainheaderdir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(mainheaderdir)" || exit $$?; \
	done

uninstall-mainheaderHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(mainheader_HEADERS)'; test -n "$(mainheaderdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(mainheaderdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS) $(check_LIBRARIES)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_LIBRARIES)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test/notify.log: test/notify$(EXEEXT)
	@p='test/notify$(EXEEXT)'; \
	b='test/notify'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test/stream.log: test/stream$(EXEEXT)
	@p='test/stream$(EXEEXT)'; \
	b='test/stream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test/http.log: test/http$(EXEEXT)
	@p='test/http$(EXEEXT)'; \
	b='test/http'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test/valgrind.sh.log: test/valgrind.sh
	@p='test/valgrind.sh'; \
	b='test/valgrind.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test/coverage.sh.log: test/coverage.sh
	@p='test/coverage.sh'; \
	b='test/coverage.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_LIBRARIES)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(SCRIPTS) $(DATA) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(headerfilesdir)" "$(DESTDIR)$(mainheaderdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/picohttpparser/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/picohttpparser/$(am__dirstamp)
	-rm -f src/reactor/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/reactor/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool mostlyclean-am

distclean: distclean-recursive
		-rm -f src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Po
	-rm -f src/picohttpparser/$(DEPDIR)/picohttpparser.Plo
	-rm -f src/reactor/$(DEPDIR)/http.Plo
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-http.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-net.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-notify.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-server.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-stream.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-timer.Po
	-rm -f src/reactor/$(DEPDIR)/net.Plo
	-rm -f src/reactor/$(DEPDIR)/notify.Plo
	-rm -f src/reactor/$(DEPDIR)/reactor.Plo
	-rm -f src/reactor/$(DEPDIR)/server.Plo
	-rm -f src/reactor/$(DEPDIR)/stream.Plo
	-rm -f src/reactor/$(DEPDIR)/timer.Plo
	-rm -f test/$(DEPDIR)/http-http.Po
	-rm -f test/$(DEPDIR)/http-mock.Po
	-rm -f test/$(DEPDIR)/notify-mock.Po
	-rm -f test/$(DEPDIR)/notify-notify.Po
	-rm -f test/$(DEPDIR)/stream-mock.Po
	-rm -f test/$(DEPDIR)/stream-stream.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-headerfilesHEADERS install-mainheaderHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f src/picohttpparser/$(DEPDIR)/libreactor_test_a-picohttpparser.Po
	-rm -f src/picohttpparser/$(DEPDIR)/picohttpparser.Plo
	-rm -f src/reactor/$(DEPDIR)/http.Plo
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-http.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-net.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-notify.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-reactor.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-server.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-stream.Po
	-rm -f src/reactor/$(DEPDIR)/libreactor_test_a-timer.Po
	-rm -f src/reactor/$(DEPDIR)/net.Plo
	-rm -f src/reactor/$(DEPDIR)/notify.Plo
	-rm -f src/reactor/$(DEPDIR)/reactor.Plo
	-rm -f src/reactor/$(DEPDIR)/server.Plo
	-rm -f src/reactor/$(DEPDIR)/stream.Plo
	-rm -f src/reactor/$(DEPDIR)/timer.Plo
	-rm -f test/$(DEPDIR)/http-http.Po
	-rm -f test/$(DEPDIR)/http-mock.Po
	-rm -f test/$(DEPDIR)/notify-mock.Po
	-rm -f test/$(DEPDIR)/notify-notify.Po
	-rm -f test/$(DEPDIR)/stream-mock.Po
	-rm -f test/$(DEPDIR)/stream-stream.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-headerfilesHEADERS uninstall-libLTLIBRARIES \
	uninstall-mainheaderHEADERS uninstall-pkgconfigDATA

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-checkLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-headerfilesHEADERS install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-mainheaderHEADERS install-man \
	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-local mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am uninstall-headerfilesHEADERS \
	uninstall-libLTLIBRARIES uninstall-mainheaderHEADERS \
	uninstall-pkgconfigDATA

.PRECIOUS: Makefile


maintainer-clean-local:
	rm -rf autotools m4 libreactor-?.?.?

hello:
	docker build -t reactor-sdk .
	docker run --rm -v ${PWD}:/work reactor-sdk \
	gcc -Wall -Wpedantic -march=native -flto -O3 -static /work/example/server.c -o /work/hello -lreactor -ldynamic && \
	strip hello

indent:
	clang-format -i src/reactor/*.c test/*.c example/*.c

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
